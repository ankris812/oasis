/// <reference types="node" />
declare const DB2Plugin: any;
declare type AAOLRecord = {
    value: Buffer;
    offset: number;
};
export default class HashtagPlugin extends DB2Plugin {
    constructor(log: any, dir: string);
    static hasHashtagOperator(texts: Array<string>): any;
    static hasSomeHashtagOperator(): any;
    processRecord(record: AAOLRecord, seq: number, pValue: number): void;
    /**
     * Gets the `seq` of all messages that have *any* of the given hashtags.
     */
    getMessagesByHashtags(hashtags: Array<string>, live: 'liveOnly' | 'liveAndOld' | undefined, cb: (err: any, opData?: any) => void, onAbort: (listener: () => void) => void): void;
    /**
     * Generalized version of `getMesssagesByHashtag`.
     * Gets the `seq` of all messages that have *some* hashtag.
     */
    getMessagesWithSomeHashtag(live: 'liveOnly' | 'liveAndOld' | undefined, cb: (err: any, opData?: any) => void, onAbort: (listener: () => void) => void): void;
    /**
     * Gets a list of hashtags of length `limit` that start with the `query`
     */
    getMatchingHashtags(query: string, limit: number, cb: (err: any, data?: any) => void): void;
}
export {};
