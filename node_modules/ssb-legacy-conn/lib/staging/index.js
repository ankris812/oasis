"use strict";
const Notify = require('pull-notify');
const msAddress = require('multiserver-address');
const debug = require('debug')('ssb:conn-staging');
const pull = require('pull-stream');
class ConnStaging {
    constructor(connHub) {
        this._hub = connHub;
        this._peers = new Map();
        this._notify = Notify();
        this._init();
    }
    _init() {
        pull(this._hub.listen(), pull.drain((ev) => {
            if (ev.type === 'connected') {
                this.unstage(ev.address);
            }
            if (ev.type === 'disconnected') {
            }
        }));
    }
    stage(address, data) {
        if (!msAddress.check(address)) {
            throw new Error('The given address is not a valid multiserver-address');
        }
        if (!!this._hub.getState(address))
            return false;
        if (this._peers.has(address))
            return false;
        this._peers.set(address, data);
        debug('staged peer %s', address);
        this._notify({ type: 'staged', address });
        return true;
    }
    unstage(address) {
        if (!msAddress.check(address)) {
            throw new Error('The given address is not a valid multiserver-address');
        }
        if (!this._peers.has(address))
            return false;
        this._peers.delete(address);
        debug('unstaged peer %s', address);
        this._notify({ type: 'unstaged', address });
        return true;
    }
    entries() {
        return this._peers.entries();
    }
    listen() {
        return this._notify.listen();
    }
}
module.exports = ConnStaging;
