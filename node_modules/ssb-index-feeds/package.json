{
  "name": "ssb-index-feeds",
  "description": "Keep an index feed up-to-date with the content feed",
  "version": "0.10.2",
  "homepage": "https://github.com/ssbc/ssb-index-feeds",
  "repository": {
    "type": "git",
    "url": "git://github.com/ssbc/ssb-index-feeds.git"
  },
  "files": [
    "*.js",
    "package.json.license",
    "LICENSES/*"
  ],
  "dependencies": {
    "debug": "^4.3.2",
    "is-canonical-base64": "^1.1.1",
    "pull-cat": "^1.1.11",
    "pull-stream": "^3.6.14",
    "ssb-classic": "^1.0.3",
    "ssb-db2": ">=5",
    "ssb-keys": ">=8",
    "ssb-ref": "^2.16.0",
    "ssb-subset-ql": "^1.0.0",
    "ssb-uri2": "^2.1.0"
  },
  "devDependencies": {
    "husky": "^4.3.0",
    "mkdirp": "^1.0.4",
    "nyc": "^15.1.0",
    "prettier": "^2.1.2",
    "pretty-quick": "^3.1.0",
    "promisify-tuple": "^1.2.0",
    "rimraf": "^3.0.2",
    "secret-stack": "^6.4.0",
    "ssb-bendy-butt": "^1.0.1",
    "ssb-caps": "^1.1.0",
    "ssb-db2": "^6.2.2",
    "ssb-feed-format": "2.2.3",
    "ssb-fixtures": "^2.4.1",
    "ssb-keys": "^8.5.0",
    "ssb-meta-feeds": "~0.35.0",
    "tap-arc": "^0.3.5",
    "tape": "^5.6.1"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run format-code-staged"
    }
  },
  "author": "Andre 'Staltz' Medeiros <contact@staltz.com>",
  "license": "LGPL-3.0",
  "scripts": {
    "test": "tape test/*.js | tap-arc --bail",
    "coverage": "nyc --reporter=lcov npm test",
    "format-code": "prettier --write \"*.js\" \"test/*.js\"",
    "format-code-staged": "pretty-quick --staged --pattern \"*.js\" --pattern \"test/*.js\""
  },
  "readme": "<!--\nSPDX-FileCopyrightText: 2021 Andre 'Staltz' Medeiros\n\nSPDX-License-Identifier: CC0-1.0\n-->\n\n# ssb-index-feeds\n\nA secret-stack plugin that uses [ssb-meta-feeds](https://github.com/ssbc/ssb-meta-feeds)\nto create and update [index feeds](https://github.com/ssbc/ssb-secure-partial-replication-spec#indexes).\n\nAlso contains a [feed format](https://github.com/ssbc/ssb-feed-format) `indexed-v1`\nunder `./format.js`.\n\n## Installation\n\n**Prerequisites:**\n\n- Requires **Node.js 10** or higher\n- Requires `ssb-db2` version 5.0 or higher\n- Requires `ssb-meta-feeds`\n\n```\nnpm install --save ssb-index-feeds\n```\n\nAdd this plugin like this:\n\n```diff\n const sbot = SecretStack({ appKey: caps.shs })\n     .use(require('ssb-db2'))\n     .use(require('ssb-meta-feeds'))\n+    .use(require('ssb-index-feeds'))\n     // ...\n```\n\n## Example usage\n\nThere is one primary API this plugin provides: `start()`. You pass it a\n`ssb-ql-0` query and it will detect whether it needs to create an index feed for\nthat query, or update an existing index feed.\n\n```js\nsbot.indexFeeds.start({ author: sbot.id, type: 'vote', private: false }, (err, index) => {\n  console.log('The index feed is ' + index.subfeed)\n})\n```\n\nFrom this point onwards, whenever the query gets more results (as the log gets\nappended), the index feed will be automatically written to.\n\nTo stop the index feed from being written to, use `stop()` with the same query\ninput.\n\n## API\n\n### `sbot.indexFeeds.start(query, cb)` (async)\n\n_Begins updating an index feed for the given query_\n\n`query` must be an `ssb-ql-0` query, either as stringified JSON or as an object.\n\nThe callback `cb` will be called right before the index feed would be written\nto. If there are no updates to be written on the index feed, this callback will\nanyway be called. The 1st argument is the possible error, and the 2nd argument\nis the \"subfeed object\" containing details on the index feed that matches the\nquery. The subfeed object has the shape `{ feedpurpose, subfeed, keys, metadata }`,\nthe same shape as returned by `ssb-meta-feeds` APIs.\n\n### `sbot.indexFeeds.doneOld(query, cb)` (async)\n\n_Informs you when the index feed for the given query has processed the existing database_\n\n`query` must be an `ssb-ql-0` query, either as stringified JSON or as an object.\n\nThe callback `cb` will be called as soon as the *writing* of the index feed has\nfinished processing all \"old\" messages on the log. The callback is called with\nzero arguments.\n\n### `sbot.indexFeeds.stop(query)` (sync)\n\n_Cancels the updating of the index feed for the given query, if it had started_\n\n`query` must be an `ssb-ql-0` query, either as stringified JSON or as an object.\n\nDoes not return anything as a response.\n\n## Configuration\n\nSome behaviors of this module can be configured by the user or by application\ncode through the conventional [ssb-config](https://github.com/ssbc/ssb-config)\nobject. The possible options are listed below:\n\n```js\n{\n  indexFeeds: {\n    /**\n     * If `autostart` is defined as an array, it informs ssb-index-feeds to\n     * automatically call `start()` with each of the array items, as soon as\n     * this plugin is initialized.\n     *\n     * The array items are just ssb-ql-0 objects, except without the `author`\n     * property, because that one will always be implicitly equal to `sbot.id`.\n     */\n    autostart: [\n      { type: 'vote', private: false },\n      { type: 'post', private: false },\n      { type: null, private: true },\n    ]\n  }\n}\n```\n\n## License\n\nLGPL-3.0\n"
}