{
  "name": "ssb-subset-ql",
  "description": "Utility library to parse, validate, and compare ssb-ql-0 and ssb-ql-1",
  "version": "1.0.1",
  "homepage": "https://github.com/ssb-ngi-pointer/ssb-subset-ql",
  "repository": {
    "type": "git",
    "url": "git://github.com/ssb-ngi-pointer/ssb-subset-ql.git"
  },
  "files": [
    "*.js",
    "package.json.license",
    "LICENSES/*"
  ],
  "dependencies": {
    "nano-equal": "^2.0.2",
    "ssb-db2": ">=3.0.0",
    "ssb-ref": "^2.13.0"
  },
  "devDependencies": {
    "husky": "^4.3.0",
    "nyc": "^15.1.0",
    "prettier": "^2.1.2",
    "pretty-quick": "^3.1.0",
    "promisify-tuple": "^1.2.0",
    "pull-stream-util": "^0.1.2",
    "rimraf": "^3.0.2",
    "secret-stack": "^6.4.0",
    "ssb-caps": "^1.1.0",
    "ssb-db2": "^6.2.3",
    "ssb-fixtures": "^2.4.1",
    "ssb-keys": "^8.5.0",
    "tap-arc": "^0.3.5",
    "tape": "^5.6.1"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run format-code-staged"
    }
  },
  "author": "Andre 'Staltz' Medeiros <contact@staltz.com>",
  "license": "LGPL-3.0",
  "scripts": {
    "test": "tape test/*.js | tap-arc --bail",
    "coverage": "nyc --reporter=lcov npm test",
    "format-code": "prettier --write \"*.js\" \"test/*.js\"",
    "format-code-staged": "pretty-quick --staged --pattern \"*.js\" --pattern \"test/*.js\""
  },
  "readme": "<!--\nSPDX-FileCopyrightText: 2021 Andre 'Staltz' Medeiros\n\nSPDX-License-Identifier: CC0-1.0\n-->\n\n# ssb-subset-ql\n\nUtility library to parse, validate, and compare ssb-ql-0 and ssb-ql-1 queries\nneeded for [subset replication and index feeds](https://github.com/ssb-ngi-pointer/ssb-subset-replication-spec)\nin SSB.\n\n## Installation\n\n**Prerequisites:**\n\n- Requires **Node.js 10** or higher\n\n```\nnpm install --save ssb-subset-ql\n```\n\nTo use this library, import its utilities like this:\n\n```js\nconst { QL0 } = require('ssb-subset-ql')\n```\n\n## API\n\n### QL0\n\n#### `validate(query)`\n\nTakes a `query` (string or object) and checks that it satisfies the ssb-ql-0\nrules. If something is wrong, it throws an error. Otherwise it returns\nundefined.\n\n#### `parse(query)`\n\nTakes a ssb-ql-0 `query` (an object or JSON as a string), validates it, and\nparses it (if necessary) to return a query object. If anything went wrong during\nvalidation, returns null.\n\n#### `toOperator(query[, dedicated])`\n\nTakes a ssb-ql-0 `query` (an object or JSON as a string), validates it, parses\nit (if necessary) and then converts the query to an [ssb-db2](https://github.com/ssb-ngi-pointer/ssb-db2)\noperator which can be inserted inside an ssb-db2 `where()`. If anything went\nwrong during validation, it throws an error.\n\nA second optional argument, `dedicated`, is a boolean that indicates whether the\nunderlying database should use dedicated index files for `type` and `author`. By\ndefault, this is `false`.\n\n#### `stringify(query)`\n\nTakes a ssb-ql-0 `query` (an object), validates it, and stringifies it into a\ncanonical (stable, unaffected by how the object was created) JSON string.\nReturns the JSON string. If anything went wrong during validation, it throws an\nerror.\n\n#### `isEquals(query1, query2)`\n\nTakes two ssb-ql-0 query objects, parses both of them, and checks that they are\nequivalent.\n\n### QL1\n\n#### `validate(query)`\n\nTakes a `query` (string or object) and checks that it satisfies the ssb-ql-1\nrules. If something is wrong, it throws an error. Otherwise it returns\nundefined.\n\n#### `parse(query)`\n\nTakes a ssb-ql-1 `query` (an object or JSON as a string), and parses it (if\nnecessary) to return a query object. If anything went wrong during validation,\nreturns null.\n\n#### `toOperator(query[, dedicated])`\n\nTakes a ssb-ql-1 `query` (an object), and converts it to an [ssb-db2](https://github.com/ssb-ngi-pointer/ssb-db2)\noperator which can be inserted inside an ssb-db2 `where()`.\n\nA second optional argument, `dedicated`, is a boolean indicating whether the\nunderlying database should use dedicated index files. By default, it's `false`.\n\n#### `stringify(query)`\n\nTakes a ssb-ql-1 `query` (an object), and stringifies it as a JSON string.\n\n#### ~~`isEquals(query1, query2)`~~\n\nNot yet supported. Will always throw an error if you use it.\n\n## License\n\nLGPL-3.0\n"
}