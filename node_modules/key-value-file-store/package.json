{
  "name": "key-value-file-store",
  "description": "",
  "version": "1.1.1",
  "homepage": "https://github.com/arj03/key-value-file-store",
  "repository": {
    "type": "git",
    "url": "git://github.com/arj03/key-value-file-store.git"
  },
  "files": [
    "*.js"
  ],
  "dependencies": {
    "atomic-file-rw": "^0.3.0"
  },
  "devDependencies": {
    "base64-url": "^2.3.3",
    "tape": "^5.2.2"
  },
  "author": "'Dominic Tarr' <dominic.tarr@gmail.com> (http://dominictarr.com)",
  "contributors": [
    "Anders Rune Jensen <arj03@protonmail.ch>"
  ],
  "license": "MIT",
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "readme": "# Key value file store\n\nSimple key value store where and each value is a file.\n\nThis project is a fork of [lossy-store] where raw fs is replaced with\n[atomic-file-rw] to provide browser support.\n\n## api\n\n### store = LossyStore(dir, codec?)\n\ncreate a lossy store with the given [codec] (or JSON by default) at\nthe `dir`\n\n### store.has(key)\n\nreturns true if this key is currently in the store.\n\n### store.ensure(key, cb)\n\nensure that this key is loaded from the file system.\nif the file has already been read, `cb` is called immediately.\nif `set` is called while waiting for the filesystem, `cb` is called immediately.\n\n### store.get (key, cb)\n\nget the current value for key, loading it if necessary\n\n### store.get (key) => value\n\nreturn the currently set `value` for `key`. may be null.\n\n### store.set(key, value)\n\nSet a new value. this will trigger a write to be performed (at some point)\n\n### store.delete(key)\n\nDelete a key-value from the store.\n\n## License\n\nMIT\n\n[lossy-store]: https://github.com/dominictarr/lossy-store\n[codec]: https://www.npmjs.com/package/flumecodec\n[atomic-file-rw]: https://github.com/ssb-ngi-pointer/atomic-file-rw\n"
}